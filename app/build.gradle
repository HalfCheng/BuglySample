apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.bugly.sample"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 101
        versionName "1.1"
        multiDexEnabled true // dex突破65535的限制
        flavorDimensions "versionCode"

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

    }


    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile.name.contains("release")) {
                        def fileName = "bugly_${variant.versionName}" + "_${variant.name}.apk"
                        outputFileName = new File("../release/", fileName)
                    } else if (outputFile.name.contains("debug")) {
                        def fileName = "bugly_${variant.versionName}" + "_${variant.name}.apk"
                        outputFileName = new File("../debug/", fileName)
                    }
            }
    }



    lintOptions {
        quiet false // 设置为true会关闭lint分析进度
        abortOnError true // 如果为true，则在发现错误时停止gradle构建
        ignoreWarnings false// 如果为true，则只报告错误
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        release {
            keyAlias 'sample'
            keyPassword '88888888'
            storeFile file('../keystore/keystore.jks')
            storePassword '88888888'
        }
        debug {
            keyAlias 'sample'
            keyPassword '88888888'
            storeFile file('../keystore/keystore.jks')
            storePassword '88888888'
        }
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            signingConfig signingConfigs.release
            minifyEnabled true //开启代码混淆
            zipAlignEnabled true
            shrinkResources true // 移除无用资源
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false //开启代码混淆
            zipAlignEnabled false
            shrinkResources false // 移除无用资源
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"

    //注释掉原有bugly的仓库
    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.3.2
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.6'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
    implementation 'com.tencent.bugly:nativecrashreport:3.6.0'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
}
